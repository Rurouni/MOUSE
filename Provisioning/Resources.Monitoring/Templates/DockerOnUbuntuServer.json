{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "dnsNameForPublicIP": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Globally unique DNS Name for the Public IP used to access the Virtual Machine."
            }
        },
        "ubuntuOSVersion": {
            "type": "string",
            "defaultValue": "15.10",
            "metadata": {
                "description": "The Ubuntu version for deploying the Docker containers. This will pick a fully patched image of this given Ubuntu version. Allowed values: 14.04.2-LTS, 14.04-DAILY, 15.04"
            },
            "allowedValues": [
                "15.10"
            ]
        }
    },
    "variables": {
        "imagePublisher": "Canonical",
        "imageOffer": "UbuntuServer",
        "OSDiskName": "osdiskfordockersimple",
        "nicName": "myVMNic",
        "extensionName": "DockerExtension",
        "addressPrefix": "10.0.0.0/16",
        "subnetName": "Subnet",
        "subnetPrefix": "10.0.0.0/24",
        "vhdStorageType": "Standard_LRS",
        "publicIPAddressType": "Dynamic",
        "vhdStorageContainerName": "vhds",
        "vmName": "Monitoring",
        "vmSize": "Standard_D1",
        "virtualNetworkName": "MyVNET",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
        "nsgName": "myNSG",
        "vhdStorageName": "[concat('vhdstorage', uniqueString(resourceGroup().id))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('vhdStorageName')]",
            "tags": {
                "displayName": "StorageAccount"
            },
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "accountType": "[variables('vhdStorageType')]"
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/publicIPAddresses",
            "tags": {
                "displayName": "PublicIPAddress"
            },
            "name": "[parameters('dnsNameForPublicIP')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
                }
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "tags": {
                "displayName": "VirtualNetwork"
            },
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "tags": {
                "displayName": "NetworkInterface"
            },
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('dnsNameForPublicIP'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('dnsNameForPublicIP'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "kibana",
                        "properties": {
                            "description": "Allow kibana",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "5601",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "ssh",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "es",
                        "properties": {
                            "description": "Allow ES",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "9200",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "influxdb",
                        "properties": {
                            "description": "Allow InfluxDB",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8083-8086",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 140,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "cadviser",
                        "properties": {
                            "description": "Allow cAdviser",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8080",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 150,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "graphana",
                        "properties": {
                            "description": "Allow grafana",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3000",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 160,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName')]",
            "tags": {
                "displayName": "VirtualMachine"
            },
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('vhdStorageName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('ubuntuOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk1",
                        "vhd": {
                            "uri": "[concat('http://', variables('vhdStorageName'), '.blob.core.windows.net/', variables('vhdStorageContainerName'), '/', variables('OSDiskName'), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                }
            },
            "resources": [

            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'), '/', variables('extensionName'))]",
            "tags": {
                "displayName": "DockerExtension"
            },
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "DockerExtension",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "compose": {
                        "elasticsearch": {
                            "image": "elasticsearch:latest",
                            "ports": [
                                "9200:9200"
                            ]
                        },
                        "kibana": {
                            "image": "kibana:latest",
                            "ports": [
                                "5601:5601"
                            ],
                            "links": [
                                "elasticsearch"
                            ],
                            "environment": [
                                "ELASTICSEARCH_URL=http://elasticsearch:9200"
                            ]
                        },
                        "influxdb": {
                            "image": "tutum/influxdb:0.12",
                            "ports": [
                                "8083:8083",
                                "8086:8086"
                            ],
                            "expose": [
                                "8090",
                                "8099"
                            ],
                            "environment": [
                                "PRE_CREATE_DB=mousemetrics"
                            ]
                        },
                        "cadvisor": {
                            "image": "google/cadvisor:latest",
                            "volumes": [
                                "/../:/rootfs:ro",
                                "/var/run:/var/run:rw",
                                "/sys:/sys:ro",
                                "/var/lib/docker/:/var/lib/docker:ro"
                            ],
                            "links": [
                                "influxdb:influxdb"
                            ],
                            "ports": [
                                "8080:8080"
                            ],
                            "command": "-storage_driver=influxdb -storage_driver_db=mousemetrics -storage_driver_host=influxdb:8086"
                        },
                        "grafana": {
                            "image": "grafana/grafana:latest",
                            "ports": [
                                "3000:3000"
                            ],
                            "links": [
                                "influxdb:influxdb",
                                "elasticsearch:elasticsearch"
                            ]
                        }
                    }
                }
            }
        }
    ]
}
